/* 2)	Define a SoftwareAttribute which is having its base class as “Attribute” with following private members:
	String ProjectName.
	String Description.
	String ClientName.
	String StartedDate.
	String EndDate.
a)	Write properties for all these members.
b)	Design a simple Console Application for testing refection concept of .NET Framework:
	Define SoftwareAttribute as Custom Attribute
	Write two classes HDFCAccount, ICICIAccount Apply
SoftwareAttribute to these classes.
	Write Test class which will read attributes applied on each classes using reflection technique */

2)
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Reflection;

namespace ReflectionAssignment
{
    internal class Reflections
    {       
            public static void Main()
            {
                Type type = Type.GetType("A8.Customer");
                Console.WriteLine("FUll NAME OF THE CLASS WITH NAMESPACE : {0} ", type.FullName);
                Console.WriteLine("");
                Console.WriteLine("NAME OF THE CLASS:{0}", type.Name);

                Console.WriteLine("Display the List Of Properties");
                Console.WriteLine("");
                PropertyInfo[] propertyInfos = type.GetProperties();
                foreach (var i in propertyInfos)
                {
                    Console.WriteLine("Property Name :{0}", i.Name);
                }

                Console.WriteLine("Display the List Of Methods");
                Console.WriteLine("");
                MethodInfo[] methodInfos = type.GetMethods();
                foreach (var i in methodInfos)
                {
                    Console.WriteLine("Method Name :{0}", i.Name);
                }

                Console.WriteLine("Display the List Of Constructors");
                Console.WriteLine("");
                ConstructorInfo[] constructorInfos = type.GetConstructors();
                foreach (var i in constructorInfos)
                {
                    Console.WriteLine("Constructors Name :{0}", i.ToString());
                }
            }

        }
        public class Customer
        {
            public int Id { get; set; }
            public string Name { get; set; }
            public Customer(int _Id, string _Name)
            {
                this.Id = _Id;
                this.Name = _Name;

            }
            public Customer()
            {
                this.Id = 103;
                this.Name = "Suresh";

            }
            public void PrintId()
            {
                Console.WriteLine("Customer ID {0}:", this.Id);
            }

            public void PrintName()
            {
                Console.WriteLine("Customer Name {0}:", this.Name);
            }

        }
    }


